# Installation doc
https://helm.sh/docs/intro/install/

# for Mac
brew install helm

# add chart repo
# helm repo add [name] [url]
helm repo add bitnami https://charts.bitnami.com/bitnami

# remove chart repo
helm repo remove bitnami

# list the repo
helm repo list

# search repo
helm search repo bitnami
helm search repo wordpress

# search application versions
helm search repo wordpress --versions

# update repo
helm repo update

# install
helm install my-wordpress bitnami/wordpress

# install or upgrade
helm upgrade --install my-wordpress bitnami/wordpress

# within custom namespace
helm install mydb bitnami/mysql --namespace ns1 --create-namespace

# with random name
helm install bitnami/mysql --generate-name

# mark as failure after waiting time(default 5min)
helm install bitnami/mysql --generate-name --wait --timeout 2m30s

# atomic(rollback to prev successful release)
helm install bitnami/mysql --generate-name --atomic

# install with custom parameter
helm install my-wordpress bitnami/wordpress --set wordpressUsername=ABCD
helm install my-wordpress bitnami/wordpress -f my-values.yaml
helm install my-wordpress bitnami/wordpress --values my-values.yaml

# upgrade with re-use command(based on installation values)
helm upgrade my-wordpress bitnami/wordpress --reuse-values

# check application status
helm status my-wordpress

# optional - for minikube
minikube service my-wordpress --url

# check the deployment status
helm list

# uninstall
helm uninstall my-wordpress

# uninstall with keeping history
helm uninstall my-wordpress --keep-history

# upgrade
helm upgrade my-wordpress bitnami/wordpress -f my-values.yaml

# upgrade forcefully(will have the downtime)
helm upgrade my-wordpress bitnami/wordpress -f my-values.yaml --force

# cleanup on failed
helm upgrade my-wordpress bitnami/wordpress -f my-values.yaml --cleanup-on-failure

# rollback
helm rollback my-wordpress 1

# dry run
helm install mydb bitnami/mysql -f my-values.yaml --dry-run

# template
helm template mydb bitnami/mysql -f my-values.yaml

# get notes information
helm get notes mydb

# get customer values(not default value)
helm get values mydb

# get customer values(including default value)
helm get values mydb --all

# get revision value
helm get values mydb --revision 1

# get manifest of current release
helm get manifest mydb
